import './UsersPage.css'
import React from 'react';
import {
    Box,
    TextField,
    InputAdornment,
    Button,
} from '@mui/material';
import SearchIcon from '@mui/icons-material/Search';
import {MaterialReactTable, useMaterialReactTable, type MRT_ColumnDef} from 'material-react-table';
import Notification from '@components/Notification.tsx';
import {User} from "@models/User.ts";
import Typography from "@mui/material/Typography";
import {useNavigate} from 'react-router-dom';

// TODO: –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∑–∞–ø—Ä–æ—Å
/**
 * –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏.
 * –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —ç—Ç–æ—Ç –º–∞—Å—Å–∏–≤ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è —Å —Å–µ—Ä–≤–µ—Ä–∞ —á–µ—Ä–µ–∑ API-–∑–∞–ø—Ä–æ—Å.
 * –ö–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –±–∞–∑–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π —É—á–∞—Å—Ç–∏—è –≤ —Å—É–±–±–æ—Ç–Ω–∏–∫–∞—Ö.
 */
const userData: User[] = [
    {
        key: "1",
        first_name: "Alice",
        last_name: "Smith",
        login: "alice.s",
        city: "Milan",
        cleanday_count: 12,       // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—É–±–±–æ—Ç–Ω–∏–∫–æ–≤, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —É—á–∞—Å—Ç–≤–æ–≤–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        organized_count: 8,        // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Å—É–±–±–æ—Ç–Ω–∏–∫–æ–≤
        level: 2,                  // –£—Ä–æ–≤–µ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    },
    {
        key: "2",
        first_name: "Bob",
        last_name: "Johnson",
        login: "bob.j",
        city: "Rome",
        cleanday_count: 5,
        organized_count: 15,
        level: 1,
    },
    {
        key: "3",
        first_name: "Charlie",
        last_name: "Brown",
        login: "charlie.b",
        city: "Florence",
        cleanday_count: 20,
        organized_count: 10,
        level: 3,
    },
];

/**
 * UsersPage: –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
 * –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–∞–±–ª–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø–æ–∏—Å–∫–∞, —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏,
 * —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
 *
 * @returns {JSX.Element} - –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç JSX-—ç–ª–µ–º–µ–Ω—Ç, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
 */
const UsersPage: React.FC = (): React.JSX.Element => {
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    const [searchText, setSearchText] = React.useState('');

    // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    const [notificationMessage, setNotificationMessage] = React.useState<string | null>(null);
    const [notificationSeverity, setNotificationSeverity] = React.useState<'success' | 'info' | 'warning' | 'error'>('success');

    // –•—É–∫ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
    const navigate = useNavigate();

    /**
     * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —á–∏—Å–ª–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å —ç–º–æ–¥–∑–∏.
     * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ.
     *
     * @param {number} level - –ß–∏—Å–ª–æ–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     * @returns {string} - –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —ç–º–æ–¥–∑–∏.
     */
    const getLevelStatus = React.useCallback((level: number) => {
        if (level == 1) {
            return '–ù–æ–≤–∏—á–æ–∫üëç';
        } else if (level == 2) {
            return '–¢—Ä—É–∂–µ–Ω–∏–∫üí™';
        } else if (level == 3) {
            return '–õ–∏–¥–µ—Ä —Ä–∞–π–æ–Ω–∞ü§ù';
        } else if (level == 4) {
            return '–≠–∫–æ–∞–∫—Ç–∏–≤–∏—Å—Çüå±';
        } else if (level == 5) {
            return '–≠–∫–æ–∑–≤–µ–∑–¥–∞üåü';
        } else {
            return '–≠–∫–æ-–≥—É—Ä—ÉüèÜ';
        }
    }, []);

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞.
     * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞.
     * –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤.
     */
    const handlePlotButtonClick = () => {
        setNotificationMessage('Graph generated successfully!');
        setNotificationSeverity('success');
    };

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞.
     * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ searchText, —á—Ç–æ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ.
     *
     * @param {React.ChangeEvent<HTMLInputElement>} event - –°–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª—è –≤–≤–æ–¥–∞.
     */
    const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {
        setSearchText(event.target.value);
    };

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ —Å—Ç—Ä–æ–∫–µ —Ç–∞–±–ª–∏—Ü—ã.
     * –û—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     *
     * @param {User} user - –û–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–æ —Å—Ç—Ä–æ–∫–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –±—ã–ª —Å–æ–≤–µ—Ä—à–µ–Ω –∫–ª–∏–∫.
     */
    const handleRowClick = React.useCallback((user: User) => {
        navigate(`/users/${user.key}`);
    }, [navigate]);

    /**
     * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–æ–≤ —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
     * –û–ø–∏—Å—ã–≤–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ MaterialReactTable.
     */
    const columns = React.useMemo<MRT_ColumnDef<User>[]>(
        () => [
            {
                accessorKey: 'key',
                header: 'ID',
            },
            {
                id: 'user',
                header: 'User',
                // –ö–∞—Å—Ç–æ–º–Ω–∞—è —è—á–µ–π–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–º–µ–Ω–∏ –∏ —Ñ–∞–º–∏–ª–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                Cell: ({row}) => (
                    <span>{row.original.first_name} {row.original.last_name}</span>
                ),
                filterVariant: 'text',
            },
            {
                accessorKey: 'login',
                header: 'Login',
            },
            {
                accessorKey: 'city',
                header: 'City',
            },
            {
                accessorKey: 'cleanday_count',
                header: 'Area Cleaned, m¬≤',
            },
            {
                accessorKey: 'organized_count',
                header: 'Organized Clean-ups',
            },
            {
                id: 'level',
                header: 'Level',
                // –ö–∞—Å—Ç–æ–º–Ω–∞—è —è—á–µ–π–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º –≤–∏–¥–µ
                Cell: ({row}) => (
                    <span>{getLevelStatus(row.original.level)}</span>
                ),
                filterVariant: 'text',
                enableColumnFilter: true,
            },
        ],
        [getLevelStatus],
    );

    /**
     * –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞ –ø–æ–∏—Å–∫–∞.
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–∏—Å–∫–æ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É.
     */
    const filteredUserData = React.useMemo(() => {
        if (!searchText) {
            return userData;
        }
        const lowerCaseSearchText = searchText.toLowerCase();
        return userData.filter((user) =>
            Object.values(user).some((value) =>
                String(value).toLowerCase().includes(lowerCaseSearchText),
            ),
        );
    }, [searchText]);

    /**
     * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã MaterialReactTable.
     * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ, –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ç–∞–±–ª–∏—Ü—ã.
     */
    const table = useMaterialReactTable({
        columns,
        data: filteredUserData,
        enableCellActions: true,
        enableColumnOrdering: false,
        enableRowSelection: false,
        enableSorting: true,
        enableColumnFilters: true,
        enableGlobalFilter: false,
        initialState: {
            pagination: {pageIndex: 0, pageSize: 10},
        },
        muiTablePaperProps: {
            elevation: 0,
            sx: {
                border: 'none',
                borderRadius: '0',
            },
        },
        muiTableProps: {
            sx: {
                tableLayout: 'fixed',
                cursor: 'pointer', // –£–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ —Å—Ç—Ä–æ–∫–∏ –º–æ–∂–Ω–æ –∫–ª–∏–∫–∞—Ç—å
            },
        },
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–ª–∏–∫–∞ –ø–æ —Å—Ç—Ä–æ–∫–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –¥–µ—Ç–∞–ª—å–Ω–æ–º—É –ø—Ä–æ—Å–º–æ—Ç—Ä—É
        muiTableBodyRowProps: ({row}) => ({
            onClick: () => handleRowClick(row.original),
        }),
        muiPaginationProps: {
            rowsPerPageOptions: [5, 10],
        },
    });

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.
     * –û—á–∏—â–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, —á—Ç–æ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –µ–≥–æ —Å–∫—Ä—ã—Ç–∏—é.
     */
    const handleNotificationClose = React.useCallback(() => {
        setNotificationMessage(null);
    }, [setNotificationMessage]);

    return (
        <Box className={"user-box"}>
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
            <Box>
                <Typography className={"user-typo"} variant="h4" color={'Black'} sx={{margin: '10px 0px 0px 20px'}}>
                    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
                </Typography>
                <Box sx={{display: 'flex', alignItems: 'center', margin: '10px 20px 0px 20px'}}>
                    {/* –ü–æ–ª–µ –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
                    <TextField
                        label="–ü–æ–∏—Å–∫"
                        value={searchText}
                        onChange={handleSearchChange}
                        InputProps={{
                            startAdornment: (
                                <InputAdornment position="start">
                                    <SearchIcon/>
                                </InputAdornment>
                            ),
                        }}
                        size="small"
                        sx={{mr: 2}}
                    />
                    {/* –ö–Ω–æ–ø–∫–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ */}
                    <Button variant="outlined" onClick={handlePlotButtonClick}
                            sx={{ml: "20px", color: 'black', borderColor: 'black'}}>
                        –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫
                    </Button>
                </Box>
            </Box>

            {/* –¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
            <MaterialReactTable
                table={table}
            />

            {/* –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
            {notificationMessage && (
                <Notification
                    message={notificationMessage}
                    severity={notificationSeverity}
                    onClose={handleNotificationClose}
                />
            )}
        </Box>
    );
};

export default UsersPage;